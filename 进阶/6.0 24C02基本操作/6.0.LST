C51 COMPILER V9.00   6_0                                                                   04/05/2022 20:37:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 6_0
OBJECT MODULE PLACED IN 6.0.OBJ
COMPILER INVOKED BY: D:\kiel 5\C51\BIN\C51.EXE 6.0.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*==================蓝桥杯单片机特训==================
   2          【进阶03】：24C02的基本读写操作
   3          **平  台：CT107D单片机综合实训平台
   4          **模  式：IO模式
   5          **底层驱动文件：2022年竞赛资源数据包提供的文件
   6          **设  计：欧浩源（小蜜蜂老师，ohy3686@qq.com）
   7          **时  间：2022-04-01
   8          **更多详见：www.xmf393.com
   9          ====================================================*/
  10          #include "reg52.h"
  11          #include "iic.h"
  12          
  13          //定义动态显示中单个数码管点亮时长
  14          #define TSMG  500
  15          //-------共阳数码管的段码编码表（无小数点）--------
  16          //0 1 2 3 4 5 6 7 8 9 A b C D E F - .
  17          unsigned char code SMG_NoDot[18]={0xc0,0xf9,
  18              0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  19              0x88,0x83,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
  20          //-----------------------------------------------
  21          //定义3个计数变量
  22          unsigned char dat1 = 0, dat2 = 0, dat3 = 0;
  23          //==============数码管动态显示专用延时函数=============
  24          void DelaySMG(unsigned int t)
  25          {
  26   1        while(t--);
  27   1      }
  28          //==================设置选通的锁存器===================
  29          void Set_HC573(unsigned char channel, unsigned char dat)
  30          {
  31   1        P0 = dat;                      //待设置数据
  32   1        switch(channel)                //选通锁存器
  33   1        {
  34   2          case 4:
  35   2            P2 = (P2 & 0x1f) | 0x80;  //Y4输出0，LED控制
  36   2          break;
  37   2          case 5:
  38   2            P2 = (P2 & 0x1f) | 0xa0;  //Y5输出0，蜂鸣器和继电器控制
  39   2          break;
  40   2          case 6:
  41   2            P2 = (P2 & 0x1f) | 0xc0;  //Y6输出0，数码管位选
  42   2          break;
  43   2          case 7:
  44   2            P2 = (P2 & 0x1f) | 0xe0;  //Y7输出0，数码管段码
  45   2          break;
  46   2          case 0:
  47   2            P2 = (P2 & 0x1f) | 0x00;  //所有锁存器不选择
  48   2          break;
  49   2        }
  50   1        P2 = (P2 & 0x1f) | 0x00;      //设置完成，关闭全部锁存器
  51   1      }
  52          //=================单个数码管动态显示=================
  53          void DisplaySMG_Bit(unsigned char pos, unsigned char value)
  54          {
  55   1        Set_HC573(6, 0x01 << pos);    //数码管的段位
C51 COMPILER V9.00   6_0                                                                   04/05/2022 20:37:06 PAGE 2   

  56   1        Set_HC573(7, value);          //数码管显示内容
  57   1        DelaySMG(TSMG);                //数码管点亮时长
  58   1        Set_HC573(6, 0x01 << pos);        
  59   1        Set_HC573(7, 0xff);            //消隐
  60   1      }
  61          //=================全部数码管静态显示=================
  62          void DisplaySMG_All(unsigned char value)
  63          {
  64   1        Set_HC573(6, 0xff);    //使能所有数码管
  65   1        Set_HC573(7, value);  //数码管显示内容  
  66   1      }
  67          //===================读取值显示函数===================
  68          void DisplaySMG_24C02()
  69          {
  70   1        //数码管右起第0位
  71   1        DisplaySMG_Bit(7,SMG_NoDot[dat3  % 10]);
  72   1        //数码管右起第1位
  73   1        DisplaySMG_Bit(6,SMG_NoDot[dat3 / 10]);    
  74   1        //数码管右起第2位
  75   1        DisplaySMG_Bit(5,SMG_NoDot[16]);        
  76   1        
  77   1        //数码管右起第3位
  78   1        DisplaySMG_Bit(4,SMG_NoDot[dat2  % 10]);
  79   1        //数码管右起第4位
  80   1        DisplaySMG_Bit(3,SMG_NoDot[dat2 / 10]);    
  81   1        //数码管右起第5位
  82   1        DisplaySMG_Bit(2,SMG_NoDot[16]);        
  83   1        
  84   1        //数码管右起第6位
  85   1        DisplaySMG_Bit(1,SMG_NoDot[dat1 % 10]);        
  86   1        //数码管右起第7位
  87   1        DisplaySMG_Bit(0,SMG_NoDot[dat1 / 10]);        
  88   1      }
  89          //================24C02单字节写入=================
  90          void Write_24C02(unsigned char addr, unsigned char dat)
  91          {
  92   1        IIC_Start();          //起始信号
  93   1        IIC_SendByte(0xa0);    //EEPROM的写设备地址
  94   1        IIC_WaitAck();        //等待从机应答
  95   1        IIC_SendByte(addr);    //内存单元地址
  96   1        IIC_WaitAck();        //等待从机应答
  97   1        IIC_SendByte(dat);    //内存写入数据
  98   1        IIC_WaitAck();        //等待从机应答
  99   1        IIC_Stop();            //停止信号
 100   1      }
 101          //================24C02单字节读取=================
 102          unsigned char Read_24C02(unsigned char addr)
 103          {
 104   1        unsigned char tmp;
 105   1        //首先，进行一个伪写操作
 106   1        IIC_Start();          //起始信号
 107   1        IIC_SendByte(0xa0);    //EEPROM的写设备地址
 108   1        IIC_WaitAck();        //等待从机应答
 109   1        IIC_SendByte(addr);    //内存单元地址
 110   1        IIC_WaitAck();        //等待从机应答
 111   1        //然后，开始字节读操作
 112   1        IIC_Start();          //起始信号
 113   1        IIC_SendByte(0xa1);    //EEPROM的读设备地址
 114   1        IIC_WaitAck();        //等待从机应答
 115   1        tmp = IIC_RecByte();  //读取内存中的数据
 116   1        IIC_SendAck(1);        //产生非应答信号
 117   1        IIC_Stop();            //停止信号
C51 COMPILER V9.00   6_0                                                                   04/05/2022 20:37:06 PAGE 3   

 118   1        return tmp;
 119   1      }
 120          //==============24C02数据读取与写入===============
 121          void Read_Write_24C02()
 122          {
 123   1        dat1 = Read_24C02(0x01);  //从24C02读取dat1
 124   1        dat2 = Read_24C02(0x03);  //从24C02读取dat2
 125   1        dat3 = Read_24C02(0x05);  //从24C02读取dat3
 126   1        
 127   1        dat1 = dat1 + 1;          //第1个计数变量+1
 128   1        dat2 = dat2 + 2;          //第2个计数变量+2
 129   1        dat3 = dat3 + 3;          //第3个计数变量+3
 130   1        if(dat1 > 10)
 131   1          dat1 = 0;
 132   1        if(dat2 > 20)
 133   1          dat2 = 0;
 134   1        if(dat3 > 30)
 135   1          dat3 = 0;
 136   1        
 137   1        Write_24C02(0x01, dat1);
 138   1        DelaySMG(1000);            //等待字节写入完成
 139   1        Write_24C02(0x03, dat2);
 140   1        DelaySMG(1000);            //等待时间不够会影响dat3写入
 141   1        Write_24C02(0x05, dat3);
 142   1        DelaySMG(1000);
 143   1      }
 144          //===================系统初始化===================
 145          void Init_sys()
 146          {
 147   1        Set_HC573(0, 0x00);        //关闭所有锁存器
 148   1        Set_HC573(5, 0x00);        //关闭蜂鸣器和继电器
 149   1        Set_HC573(4, 0xff);        //关闭全部LED灯
 150   1        DisplaySMG_All(0xff);      //关闭全部数码管
 151   1      }
 152          //=======================主函数=======================
 153          void main()
 154          {
 155   1        Init_sys();                //系统初始化
 156   1        Read_Write_24C02();        //读写24C02的三个单元的数据
 157   1        while(1)
 158   1        {
 159   2          DisplaySMG_24C02();      //循环动态刷新数码管
 160   2        }
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    475    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
