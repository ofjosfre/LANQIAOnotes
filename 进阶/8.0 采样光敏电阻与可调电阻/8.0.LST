C51 COMPILER V9.00   8_0                                                                   04/05/2022 20:51:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 8_0
OBJECT MODULE PLACED IN 8.0.OBJ
COMPILER INVOKED BY: D:\kiel 5\C51\BIN\C51.EXE 8.0.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          /*==================蓝桥杯单片机特训==================
   3          【进阶05】：采样光敏电阻与可调电阻的电压
   4          **平  台：CT107D单片机综合实训平台
   5          **模  式：IO模式
   6          **底层驱动文件：2022年竞赛资源数据包提供的文件
   7          **设  计：欧浩源（小蜜蜂老师，ohy3686@qq.com）
   8          **时  间：2022-04-01
   9          **更多详见：www.xmf393.com
  10          ====================================================*/
  11          #include "reg52.h"
  12          #include "iic.h"
  13          //定义动态显示中单个数码管点亮时长
  14          #define TSMG  500
  15          //-------共阳数码管的段码编码表（无小数点）--------
  16          //0 1 2 3 4 5 6 7 8 9 A B C D E F - .
  17          unsigned char code SMG_NoDot[18]={0xc0,0xf9,
  18              0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  19              0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
  20          //-------共阳数码管的段码编码表（带小数点）--------
  21          //0. 1. 2. 3. 4. 5. 6. 7. 8. 9.
  22          unsigned char code SMG_Dot[10]={0x40,0x79,
  23              0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  24          //-----------------------------------------------
  25          unsigned char adc1_value = 0;    //AIN1的采样数据
  26          float adc1_volt = 0;            //AIN1的换算电压
  27          unsigned int smg1_volt = 0;      //AIN1的显示电压
  28          unsigned char adc3_value = 0;    //AIN3的采样数据
  29          float adc3_volt = 0;            //AIN3的换算电压
  30          unsigned int smg3_volt = 0;      //AIN3的显示电压
  31          //==============数码管动态显示专用延时函数=============
  32          void DelaySMG(unsigned int t)
  33          {
  34   1        while(t--);
  35   1      }
  36          //==================设置选通的锁存器===================
  37          void Set_HC573(unsigned char channel, unsigned char dat)
  38          {
  39   1        P0 = dat;                      //待设置数据
  40   1        switch(channel)                //选通锁存器
  41   1        {
  42   2          case 4:
  43   2            P2 = (P2 & 0x1f) | 0x80;  //Y4输出0，LED控制
  44   2          break;
  45   2          case 5:
  46   2            P2 = (P2 & 0x1f) | 0xa0;  //Y5输出0，蜂鸣器和继电器控制
  47   2          break;
  48   2          case 6:
  49   2            P2 = (P2 & 0x1f) | 0xc0;  //Y6输出0，数码管位选
  50   2          break;
  51   2          case 7:
  52   2            P2 = (P2 & 0x1f) | 0xe0;  //Y7输出0，数码管段码
  53   2          break;
  54   2          case 0:
  55   2            P2 = (P2 & 0x1f) | 0x00;  //所有锁存器不选择
C51 COMPILER V9.00   8_0                                                                   04/05/2022 20:51:05 PAGE 2   

  56   2          break;
  57   2        }
  58   1        P2 = (P2 & 0x1f) | 0x00;      //设置完成，关闭全部锁存器
  59   1      }
  60          //=================单个数码管动态显示=================
  61          void DisplaySMG_Bit(unsigned char pos, unsigned char value)
  62          {
  63   1        Set_HC573(6, 0x01 << pos);    //数码管的段位
  64   1        Set_HC573(7, value);          //数码管显示内容
  65   1        DelaySMG(TSMG);                //数码管点亮时长
  66   1        Set_HC573(6, 0x01 << pos);        
  67   1        Set_HC573(7, 0xff);            //消隐
  68   1      }
  69          //=================全部数码管静态显示=================
  70          void DisplaySMG_All(unsigned char value)
  71          {
  72   1        Set_HC573(6, 0xff);    //使能所有数码管
  73   1        Set_HC573(7, value);  //数码管显示内容  
  74   1      }
  75          //===================电压值显示函数===================
  76          void DisplaySMG_ADC()
  77          {
  78   1        //数码管右起第0位
  79   1        DisplaySMG_Bit(7,SMG_NoDot[smg1_volt  % 10]);
  80   1        //数码管右起第1位
  81   1        DisplaySMG_Bit(6,SMG_NoDot[(smg1_volt / 10) % 10]);    
  82   1        //数码管右起第2位
  83   1        DisplaySMG_Bit(5,SMG_Dot[smg1_volt / 100]);        
  84   1      
  85   1        //数码管右起第5位
  86   1        DisplaySMG_Bit(2,SMG_NoDot[smg3_volt  % 10]);
  87   1        //数码管右起第6位
  88   1        DisplaySMG_Bit(1,SMG_NoDot[(smg3_volt / 10) % 10]);    
  89   1        //数码管右起第7位
  90   1        DisplaySMG_Bit(0,SMG_Dot[smg3_volt / 100]);    
  91   1      }
  92          //===============PCF8591电压采样处理函数===============
  93          unsigned char Read_PCF8591_ADC(unsigned char ain)
  94          {
  95   1        unsigned char tmp;
  96   1        IIC_Start();          
  97   1        IIC_SendByte(0x90);    //PCF8591的写设备地址 
  98   1        IIC_WaitAck();        
  99   1        if(ain == 1)
 100   1        {
 101   2          IIC_SendByte(0x01); //通道1，光敏电阻电压
 102   2        }
 103   1        else if(ain == 3)
 104   1        {
 105   2          IIC_SendByte(0x03); //通道3，可调电阻电压
 106   2        }    
 107   1        IIC_WaitAck();              
 108   1        IIC_Stop(); 
 109   1        
 110   1        DisplaySMG_ADC();      //等待电压转换完成
 111   1        
 112   1        IIC_Start();                  
 113   1        IIC_SendByte(0x91);   //PCF8591的读设备地址
 114   1        IIC_WaitAck();                 
 115   1        tmp = IIC_RecByte();   //读出AD采样数据
 116   1        IIC_SendAck(1);         //产生非应答信号                 
 117   1        IIC_Stop();
C51 COMPILER V9.00   8_0                                                                   04/05/2022 20:51:05 PAGE 3   

 118   1        return tmp;
 119   1      }
 120          //=============采样光敏电阻和可调电阻的电压=============
 121          void Read_AIN1_AIN3()
 122          {
 123   1        adc1_value = Read_PCF8591_ADC(1);
 124   1        adc1_volt = adc1_value * (5.0 / 255);
 125   1        smg1_volt = adc1_volt * 100;
 126   1        
 127   1        adc3_value = Read_PCF8591_ADC(3);
 128   1        adc3_volt = adc3_value * (5.0 / 255);
 129   1        smg3_volt = adc3_volt * 100;
 130   1      }
 131          //=====================系统初始化=====================
 132          void Init_sys()
 133          {
 134   1        Set_HC573(0, 0x00);        //关闭所有锁存器
 135   1        Set_HC573(5, 0x00);        //关闭蜂鸣器和继电器
 136   1        Set_HC573(4, 0xff);        //关闭全部LED灯
 137   1        DisplaySMG_All(0xff);      //关闭全部数码管
 138   1      }
 139          //=======================主函数=======================
 140          void main()
 141          {
 142   1        Init_sys();               //系统初始化
 143   1        while(1)
 144   1        {
 145   2          Read_AIN1_AIN3();      //循环采样电压
 146   2          DisplaySMG_ADC();      //动态刷新数码管
 147   2        }
 148   1      }
 149          //========================END=========================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    552    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
