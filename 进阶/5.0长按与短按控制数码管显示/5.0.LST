C51 COMPILER V9.00   5_0                                                                   04/05/2022 20:00:49 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 5_0
OBJECT MODULE PLACED IN 5.0.OBJ
COMPILER INVOKED BY: D:\kiel 5\C51\BIN\C51.EXE 5.0.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*==================蓝桥杯单片机特训==================
   2          【进阶02】：长按与短按控制数码管显示
   3          **平  台：CT107D单片机综合实训平台
   4          **模  式：IO模式
   5          **设  计：欧浩源（小蜜蜂老师，ohy3686@qq.com）
   6          **时  间：2022-03-31
   7          **更多详见：www.xmf393.com
   8          ====================================================*/
   9          #include "reg52.h"
  10          
  11          sbit S4 = P3^3;
  12          
  13          //定义动态显示中单个数码管点亮时长
  14          #define TSMG  500
  15          //-------共阳数码管的段码编码表（无小数点）--------
  16          //0 1 2 3 4 5 6 7 8 9 A b C D E F - .
  17          unsigned char code SMG_NoDot[18]={0xc0,0xf9,
  18              0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  19              0x88,0x83,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
  20          
  21          unsigned char num = 28;                //定义计数变量
  22          bit F_key = 0;                    //按键按下标志
  23          unsigned int count_t = 0;          //10ms单位累计
  24          void Display_Num();                //声明数码管显示函数              
  25          
  26          //==============数码管动态显示专用延时函数=============
  27          void DelaySMG(unsigned int t)
  28          {
  29   1        while(t--);
  30   1      }
  31          //==================设置选通的锁存器===================
  32          void Set_HC573(unsigned char channel, unsigned char dat)
  33          {
  34   1        P0 = dat;                      //待设置数据
  35   1        switch(channel)                //选通锁存器
  36   1        {
  37   2          case 4:
  38   2            P2 = (P2 & 0x1f) | 0x80;  //Y4输出0，LED控制
  39   2          break;
  40   2          case 5:
  41   2            P2 = (P2 & 0x1f) | 0xa0;  //Y5输出0，蜂鸣器和继电器控制
  42   2          break;
  43   2          case 6:
  44   2            P2 = (P2 & 0x1f) | 0xc0;  //Y6输出0，数码管位选
  45   2          break;
  46   2          case 7:
  47   2            P2 = (P2 & 0x1f) | 0xe0;  //Y7输出0，数码管段码
  48   2          break;
  49   2          case 0:
  50   2            P2 = (P2 & 0x1f) | 0x00;  //所有锁存器不选择
  51   2          break;
  52   2        }
  53   1        P2 = (P2 & 0x1f) | 0x00;      //设置完成，关闭全部锁存器
  54   1      }
  55          //=================单个数码管动态显示=================
C51 COMPILER V9.00   5_0                                                                   04/05/2022 20:00:49 PAGE 2   

  56          void DisplaySMG_Bit(unsigned char pos, unsigned char value)
  57          {
  58   1        Set_HC573(6, 0x01 << pos);    //数码管的段位
  59   1        Set_HC573(7, value);          //数码管显示内容
  60   1        DelaySMG(TSMG);                //数码管点亮时长
  61   1        Set_HC573(6, 0x01 << pos);        
  62   1        Set_HC573(7, 0xff);            //消隐
  63   1      }
  64          //=================全部数码管静态显示=================
  65          void DisplaySMG_All(unsigned char value)
  66          {
  67   1        Set_HC573(6, 0xff);    //使能所有数码管
  68   1        Set_HC573(7, value);  //数码管显示内容  
  69   1      }
  70          //==================计数值显示函数====================
  71          void Display_Num()
  72          {
  73   1        //数码管右起第0位
  74   1        DisplaySMG_Bit(7,SMG_NoDot[num  % 10]);
  75   1        //数码管右起第1位
  76   1        DisplaySMG_Bit(6,SMG_NoDot[num / 10]);          
  77   1      }
  78          //===================定时器T0初始化===================
  79          void Init_Timer0()
  80          {
  81   1        //定时器计数初值设置：10ms
  82   1        TH0 = (0 - 10000) / 256;
  83   1        TL0 = (0 - 10000) % 256;
  84   1        ET0 = 1;              //使能定时器0中断
  85   1        EA = 1;                //打开总中断
  86   1        TR0 = 1;              //启动定时器0
  87   1      }
  88          //===============定时器T0的中断服务函数================
  89          void Service_Timer0() interrupt 1
  90          {
  91   1        TH0 = (0 - 10000) / 256;
  92   1        TL0 = (0 - 10000) % 256;
  93   1        if(F_key == 1)        //在按键按下期间进行计数
  94   1        {
  95   2          count_t++;          //按键按下的持续时间
  96   2        }
  97   1      }
  98          //==================按键扫描处理函数===================
  99          void Scan_Keys()
 100          {
 101   1        if(S4 == 0)
 102   1        {
 103   2          DelaySMG(1000);      //去抖动处理
 104   2          if(S4 == 0)          //确认为按下信号
 105   2          {
 106   3            count_t = 0;      //时间计数变量清0
 107   3            F_key = 1;        //标志按键按下状态
 108   3            while(S4 == 0)    //等待按键松开
 109   3            {
 110   4              Display_Num();  //在按下期间保持数码管正常显示
 111   4            }
 112   3            F_key = 0;        //标志按键松开状态
 113   3            
 114   3            if(count_t > 100)  //按下时间大于1秒，长按
 115   3            {
 116   4              num = 0;        //数码管计数清除为00
 117   4            }
C51 COMPILER V9.00   5_0                                                                   04/05/2022 20:00:49 PAGE 3   

 118   3            else              //按下时间小于1秒，短按
 119   3            {
 120   4              num++;          //数码管计数加1
 121   4              if(num == 100)
 122   4              {
 123   5                num = 0;      //计数超出最大值99后恢复00
 124   5              }
 125   4            }
 126   3          }
 127   2        }
 128   1      }
 129          //=====================系统初始化=====================
 130          void Init_sys()
 131          {
 132   1        Set_HC573(0, 0x00);        //关闭所有锁存器
 133   1        Set_HC573(5, 0x00);        //关闭蜂鸣器和继电器
 134   1        Set_HC573(4, 0xff);        //关闭全部LED灯
 135   1        DisplaySMG_All(0xff);      //关闭全部数码管
 136   1        Init_Timer0();            //初始化定时器0并启动
 137   1      }
 138          //=======================主函数=======================
 139          void main()
 140          {
 141   1        Init_sys();                //系统初始化
 142   1        while(1)
 143   1        {
 144   2          Scan_Keys();            //循环扫描按键
 145   2          Display_Num();          //数码管刷新
 146   2        }
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    307    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
