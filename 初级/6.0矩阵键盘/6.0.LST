C51 COMPILER V9.00   6_0                                                                   03/13/2022 22:01:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 6_0
OBJECT MODULE PLACED IN 6.0.OBJ
COMPILER INVOKED BY: D:\kiel 5\C51\BIN\C51.EXE 6.0.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          
   3          sfr P4    = 0xC0;
   4          
   5          unsigned char code SMG[18]=
   6          {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,
   7          0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
   8          
   9          sbit HC138_A=P2^5;
  10          sbit HC138_B=P2^6;
  11          sbit HC138_C=P2^7;
  12          
  13          sbit R1=P3^0;
  14          sbit R2=P3^1;
  15          sbit R3=P3^2;
  16          sbit R4=P3^3;
  17          
  18          sbit C4=P3^4;
  19          sbit C3=P3^5;
  20          sbit C2=P4^2;
  21          sbit C1=P4^4;
  22          
  23          void select(unsigned char n)
  24          {
  25   1        switch(n)
  26   1        {
  27   2          case4:
  28   2           HC138_C=1;
  29   2           HC138_B=0;
  30   2           HC138_A=0;
  31   2           break;
  32   2          case5:
  33   2           HC138_C=1;
  34   2           HC138_B=0;
  35   2           HC138_A=1;
  36   2           break;
  37   2          case6:
  38   2           HC138_C=1;
  39   2           HC138_B=1;
  40   2           HC138_A=0;
  41   2           break;
  42   2          case7:
  43   2           HC138_C=1;
  44   2           HC138_B=1;
  45   2           HC138_A=1;
  46   2           break;
  47   2        }
  48   1      }
*** WARNING C280 IN LINE 27 OF 6.0.C: 'case4': unreferenced label
*** WARNING C280 IN LINE 32 OF 6.0.C: 'case5': unreferenced label
*** WARNING C280 IN LINE 37 OF 6.0.C: 'case6': unreferenced label
*** WARNING C280 IN LINE 42 OF 6.0.C: 'case7': unreferenced label
  49          
  50          void displaykey(unsigned char value)
  51          {
C51 COMPILER V9.00   6_0                                                                   03/13/2022 22:01:50 PAGE 2   

  52   1        select(6);
  53   1        P0=0x01;
  54   1        select(7);
  55   1        P0=value;
  56   1      }
  57          
  58          unsigned char keynumber;
  59          
  60          void scankeysmulti()
  61          {
  62   1        R1=0;
  63   1        R2=R3=R4=1;
  64   1        C1=C2=C3=C4=1;
  65   1        if (C1==0)
  66   1        {
  67   2          while(C1==0);
  68   2          keynumber=0;
  69   2          displaykey(SMG[keynumber]);
  70   2        }
  71   1        else if(C2==0)
  72   1        {
  73   2          while(C2==0);
  74   2          keynumber=1;
  75   2          displaykey(SMG[keynumber]);
  76   2        }
  77   1        else if(C3==0)
  78   1        {
  79   2          while(C3==0);
  80   2          keynumber=2;
  81   2          displaykey(SMG[keynumber]);
  82   2        }
  83   1          else if(C4==0)
  84   1        {
  85   2          while(C4==0);
  86   2          keynumber=3;
  87   2          displaykey(SMG[keynumber]);
  88   2        }                                  //c1
  89   1        R2=0;
  90   1        R1=R3=R4=1;
  91   1        C1=C2=C3=C4=1;
  92   1        if (C1==0)
  93   1        {
  94   2          while(C1==0);
  95   2          keynumber=4;
  96   2          displaykey(SMG[keynumber]);
  97   2        }
  98   1        else if(C2==0)
  99   1        {
 100   2          while(C2==0);
 101   2          keynumber=5;
 102   2          displaykey(SMG[keynumber]);
 103   2        }
 104   1        else if(C3==0)
 105   1        {
 106   2          while(C3==0);
 107   2          keynumber=6;
 108   2          displaykey(SMG[keynumber]);
 109   2        }
 110   1          else if(C4==0)
 111   1        {
 112   2          while(C4==0);
 113   2          keynumber=7;
C51 COMPILER V9.00   6_0                                                                   03/13/2022 22:01:50 PAGE 3   

 114   2          displaykey(SMG[keynumber]);
 115   2        }                              //c2
 116   1        R3=0;
 117   1        R1=R2=R4=1;
 118   1        C1=C2=C3=C4=1;
 119   1        if (C1==0)
 120   1        {
 121   2          while(C1==0);
 122   2          keynumber=8;
 123   2          displaykey(SMG[keynumber]);
 124   2        }
 125   1        else if(C2==0)
 126   1        {
 127   2          while(C2==0);
 128   2          keynumber=9;
 129   2          displaykey(SMG[keynumber]);
 130   2        }
 131   1        else if(C3==0)
 132   1        {
 133   2          while(C3==0);
 134   2          keynumber=10;
 135   2          displaykey(SMG[keynumber]);
 136   2        }
 137   1          else if(C4==0)
 138   1        {
 139   2          while(C4==0);
 140   2          keynumber=11;
 141   2          displaykey(SMG[keynumber]);
 142   2        }                                 //c3
 143   1        R4=0;
 144   1        R1=R2=R3=1;
 145   1        C1=C2=C3=C4=1;
 146   1        if (C1==0)
 147   1        {
 148   2          while(C1==0);
 149   2          keynumber=12;
 150   2          displaykey(SMG[keynumber]);
 151   2        }
 152   1        else if(C2==0)
 153   1        {
 154   2          while(C2==0);
 155   2          keynumber=13;
 156   2          displaykey(SMG[keynumber]);
 157   2        }
 158   1        else if(C3==0)
 159   1        {
 160   2          while(C3==0);
 161   2          keynumber=14;
 162   2          displaykey(SMG[keynumber]);
 163   2        }
 164   1          else if(C4==0)
 165   1        {
 166   2          while(C4==0);
 167   2          keynumber=15;
 168   2          displaykey(SMG[keynumber]);
 169   2        }                               //c4
 170   1      }
 171          
 172          
 173          void main()
 174          {
 175   1        while(1)
C51 COMPILER V9.00   6_0                                                                   03/13/2022 22:01:50 PAGE 4   

 176   1        {
 177   2          scankeysmulti();
 178   2        }
 179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    275    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
